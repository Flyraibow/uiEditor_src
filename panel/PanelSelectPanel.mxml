<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="500" height="354" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			import ui.UISprite;
			import ui.comp.UIPanelEditor;
			import ui.struct.UIPanelData;
			
			public var optionManager : OptionManager;
			
			public var callbackFunction : Function;
			
			public var uipanelData : UIPanelData;
			
			private var _uiSprite : UISprite;
			private var _uipanelEditor : UIPanelEditor;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				Manager.textInPutEnable = false;
				list.dataProvider = optionManager.panelList;
				
				_uiSprite = new UISprite();
				
				image.source = _uiSprite;
				_uipanelEditor = new UIPanelEditor();
				_uipanelEditor.panelDic = optionManager.panelSkinDic;
				_uiSprite.addChild(_uipanelEditor);
				_uipanelEditor.changeSkin("");
				
				if(uipanelData != null)
				{
					var skinName : String = uipanelData.uiPanel.getSkinName();
					_uipanelEditor.changeSkin(skinName);
					list.selectedItem = skinName;
				}
				
				_uipanelEditor.x = (image.width - _uipanelEditor.width) / 2;
				_uipanelEditor.y = (image.height - _uipanelEditor.height) / 2;
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this);
				Manager.textInPutEnable = true;
			}
			
			protected function listButton_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				
				var selectItem : String = list.selectedItem as String;
				if(selectItem != null)
				{
					_uipanelEditor.changeSkin(selectItem);
					_uipanelEditor.x = (image.width - _uipanelEditor.width) / 2;
					_uipanelEditor.y = (image.height - _uipanelEditor.height) / 2;
				}
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				if(uipanelData == null)
				{
					uipanelData = new UIPanelData();
					uipanelData.setUIPanel(_uipanelEditor);
					callbackFunction(uipanelData);
				}
				else
				{
					uipanelData.uiPanel.changeSkin(_uipanelEditor.getSkinName());
					uipanelData.updateSkin();
				}
				PopUpManager.removePopUp(this);
				Manager.textInPutEnable = true;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:Panel left="0" right="0" top="0" bottom="0" title="选择面板">
		<s:List id="list" y="10" left="10" width="112" height="275"
				change="listButton_changeHandler(event)" labelField="name"></s:List>
		<s:Button x="160" y="290" label="确定" click="button2_clickHandler(event)"/>
		<s:Button x="278" y="290" label="取消" click="button1_clickHandler(event)"/>
		<s:BorderContainer y="10" right="10" width="358" height="272">
			<mx:SWFLoader id="image" left="0" right="0" top="0" bottom="0" scaleContent="false">
			</mx:SWFLoader>
		</s:BorderContainer>
	</s:Panel>
</s:Group>
